{
  "$id": "http://www.perfsonar.net/record-schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "perfSONAR Lookup Service Schema",
  "description": "Schema for common record keys in perfSONAR Lookup Service",
  "definitions": {
    "record": {
      "type": "object",
      "$id": "#record",
      "properties": {
        "schemaVersion": {
          "description": "LS schema version",
          "type": "string"
        },
        "type": {
          "description": "record type",
          "type": "string",
          "enum": [
            "host",
            "service",
            "interface",
            "person",
            "psmetadata"
          ]
        },
        "expires": {
          "description": "IS0 8601 datetime until which record is valid. Record needs to be renewed before expiration",
          "type": "string",
          "format": "date-time"
        },
        "ttl": {
          "description": "ISO 8601 duration. time until which lease was requested by client.",
          "type": "string",
          "pattern": "^P(?:\\d+(?:\\.\\d+)?W)?(?:\\d+(?:\\.\\d+)?D)?(?:T(?:\\d+(?:\\.\\d+)?H)?(?:\\d+(?:\\.\\d+)?M)?(?:\\d+(?:\\.\\d+)?S)?)?$"
        },
        "state": {
          "description": "state of the record in the LS. Has it been registered or renewed or expired",
          "type": "string",
          "enum": [
            "expired",
            "registered",
            "renewed"
          ]
        },
        "uri": {
          "description": "relative uri to access the record in LS",
          "type": "string",
          "format": "uri-reference"
        },
        "client-uuid": {
          "description": "Client UUID. Generated by client. All records registered by a client will have same client uuid.",
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "schema-version": {
          "description": "Schema Version",
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        }
      },
      "required": [
        "type",
        "expires"
      ]
    },
    "location-latlong":{
      "type": "object",
      "$id": "#latlong",
      "properties": {
        "location-latitude": {
          "description": "latitude expressed as floating number between -90.00 to 90.00",
          "type": "number",
          "minimum": -90.00,
          "maximum": 90.00
        },
        "location-longitude": {
          "description": "longitude expressed as floating number between -180.00 to 180.00",
          "type": "number",
          "minimum": -180.00,
          "maximum": 180.00
        }
      },
      "required": [
        "location-latitude",
        "location-longitude"
      ]
    },
    "location-address":{
      "type": "object",
      "$id": "#address",
      "properties": {
        "location-sitename": {
          "description": "site name where this pS node is located",
          "type": "string"
        },
        "location-city": {
          "description": "city name",
          "type": "string"
        },
        "location-region": {
          "description": "state/province/region where the host is located.",
          "type": "string"
        },
        "location-country": {
          "description": "country (ISO 3166 country code - 2 digit)",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "location-code": {
          "description": "zip code or postal code",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "location-city",
        "location-region",
        "location-country",
        "location-code"
      ]
    },

    "location": {
      "$id": "#location",
      "anyOf": [
          {"$ref": "https://github.com/esnet/simple-lookup-service/blob/json-schemas/lookup/simple-lookup-service-server/schemas/record-schema.json/#latlong"},
          {"$ref": "https://github.com/esnet/simple-lookup-service/blob/json-schemas/lookup/simple-lookup-service-server/schemas/record-schema.json/#address"}
        ]
    },
    "group": {
      "type": "object",
      "$id": "#group",
      "properties": {
        "group-domains": {
          "description": "list of domains associated with the pS node. Eg: es.net, internet2.edu",
          "type": "array",
          "items": {
            "type": "string",
            "format": "hostname"
          }
        },
        "group-communities": {
          "description": "list of communities the pS node is part of",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
